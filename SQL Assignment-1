create database Assignments;
use assignments;
CREATE TABLE Crime (
CrimeID INT PRIMARY KEY,
IncidentType VARCHAR(255),
IncidentDate DATE,
Location VARCHAR(255),
Description TEXT,
Status VARCHAR(20)
);

CREATE TABLE Victim (
VictimID INT PRIMARY KEY,
CrimeID INT,
Name VARCHAR(255),
ContactInfo VARCHAR(255),
Injuries VARCHAR(255),
FOREIGN KEY (CrimeID) REFERENCES Crime(CrimeID)
);

CREATE TABLE Suspect (
SuspectID INT PRIMARY KEY,
CrimeID INT,
Name VARCHAR(255),
Description TEXT,
CriminalHistory TEXT,
FOREIGN KEY (CrimeID) REFERENCES Crime(CrimeID)
);

INSERT INTO Crime (CrimeID, IncidentType, IncidentDate, Location, Description, Status)
VALUES
(1, 'Robbery', '2023-09-15', '123 Main St, Cityville', 'Armed robbery at a convenience store', 'Open'),
(2, 'Homicide', '2023-09-20', '456 Elm St, Townsville', 'Investigation into a murder case', 'Under Investigation'),
(3, 'Theft', '2023-09-10', '789 Oak St, Villagetown', 'Shoplifting incident at a mall', 'Closed');

INSERT INTO Victim (VictimID, CrimeID, Name, ContactInfo, Injuries)
VALUES
(1, 1, 'John Doe', 'johndoe@example.com', 'Minor injuries'),
(2, 2, 'Jane Smith', 'janesmith@example.com', 'Deceased'),
(3, 3, 'Alice Johnson', 'alicejohnson@example.com', 'None');

INSERT INTO Suspect (SuspectID, CrimeID, Name, Description, CriminalHistory)
VALUES
(1, 1, 'Robber 1', 'Armed and masked robber', 'Previous robbery convictions'),
(2, 2, 'Unknown', 'Investigation ongoing', NULL),
(3, 3, 'Suspect 1', 'Shoplifting suspect', 'Prior shoplifting arrests');

select * from crime;
select * from victim;
select * from suspect;

/* 1. Selecct all open incidents */
select * from crime where status='open'; 

/* 2. Find the total number of incidents. */
select count(*) Total_Number_of_Incidents from crime;

/* 3. List all unique incident types */
select distinct incidenttype from crime;

/* 4. Retrieve incidents that occurred between '2023-09-01' and '2023-09-10'.*/
select * from crime where incidentdate between '2023-09-01' and '2023-09-10';

/* 5. List persons involved in incidents in descending order of age. */
alter table victim add age int;
update victim set age=25 where crimeid=1;
update victim set age=30 where crimeid=2;
update victim set age=32 where crimeid=3;

select name from victim order by age desc;

select v.name,s.name,v.age from victim v inner join suspect s on v.crimeid=s.crimeid order by v.age desc;

/* 6. Find the average age of persons involved in incidents.*/
select avg(age) Average_Age from victim;

/* 7. List incident types and their counts, only for open cases. */
select IncidentType,count(incidenttype) as Count_Incident_Type from crime group by incidenttype;

/* 8. Find persons with names containing 'Doe'. */
select name from victim where name like '%Doe%' 
union all 
select name from suspect where name like '%Doe%';

/* 9. Retrieve the names of persons involved in open cases and closed cases. */
select v.name from victim v inner join crime c on c.crimeid=v.crimeId where c.status='open' or c.status='closed'
union 
select v.name from victim v inner join crime c on c.crimeid=v.crimeId where c.status='open' or c.status='closed';


/* 10. List incident types where there are persons aged 30 or 35 involved. */
update victim set age=35 where crimeid=3;
select c.incidenttype from crime c inner join victim v on c.crimeid=v.crimeid where v.age=30 or v.age=35;

/* 11. Find persons involved in incidents of the same type as 'Robbery'. */

select v.name from crime c inner join victim v on c.crimeid=v.crimeid where incidenttype='robbery'
union
select s.name from crime c inner join suspect s on c.crimeid=s.crimeid where incidenttype='robbery';

/* 12. List incident types with more than one open case. */
select * from crime;
insert into crime values
(4,'Robbery','2023-09-11','Brook side,CityPark','Robbery at bank','open');

select incidenttype from crime group by incidenttype having count(incidenttype)>1;

/* 13. List all incidents with suspects whose names also appear as victims in other incidents*/

select c.incidenttype ,s.name from (crime c inner join suspect s on c.crimeid=s.crimeid)
inner join victim v on c.crimeid=v.crimeid where s.name=v.name;  /doubt/


/* 14. Retrieve all incidents along with victim and suspect details.*/
select * from suspect;
select c.,v.,s.* from (crime c inner join victim v on c.crimeid=v.crimeid)
inner join suspect s on s.crimeid=c.crimeid;

/* 15. Find incidents where the suspect is older than any victim. */
alter table suspect add age int;
update suspect set age=35 where crimeid=1;
update suspect set age=24 where crimeid=2;
update suspect set age=29 where crimeid=3;

select c.incidenttype from (victim v inner join suspect s on s.crimeid=v.crimeid and s.age>v.age) 
inner join crime c on s.crimeid=c.crimeid;
select * from suspect;
select * from crime;

/* 16. Find suspects involved in multiple incidents:*/
insert into suspect values 
(4,4,'Robber 2','Bank robbery',null,41);
select s.name,c.IncidentType from suspect s inner join crime c on c.crimeid=s.crimeid group by c.IncidentType,s.name having count(c.IncidentType)>1; 
update suspect set name='Robber 1' where crimeid=4;

/17. List incidents with no suspects involved./
select * from crime where crimeid not in (select crimeid from suspect);

/* 18. List all cases where at least one incident is of type 'Homicide' and all other incidents are of type
'Robbery'.*/ 
select crimeid,incidenttype from crime where incidenttype ='Homicide' or incidenttype='Robbery'; /* doubt*/


/* 19. Retrieve a list of all incidents and the associated suspects, showing suspects for each incident, or
'No Suspect' if there are none.*/

select c.crimeid,c.incidenttype, case
when s.name is null then 'No Suspect' else s.name 
end as Suspect_Name
from crime c left  join suspect s on c.crimeid=s.crimeid;

/* 20. List all suspects who have been involved in incidents with incident types 'Robbery' or 'Assault' */

select s.* from suspect s inner join crime c on c.crimeid=s.crimeid where c.incidenttype ='Robbery' or c.incidenttype='Assault';
